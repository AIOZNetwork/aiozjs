syntax = "proto3";
package gravity.v1;

import "gravity/v1/genesis.proto";
import "cosmos/bank/v1beta1/bank.proto";
import "gogoproto/gogo.proto";
option  go_package = "github.com/Gravity-Bridge/Gravity-Bridge/module/x/gravity/types";

// UnhaltBridgeProposal defines a custom governance proposal useful for restoring
// the bridge after a oracle disagreement. Once this proposal is passed bridge state will roll back events 
// to the nonce provided in target_nonce if and only if those events have not yet been observed (executed on the Cosmos chain). This allows for easy
// handling of cases where for example an Ethereum hardfork has occured and more than 1/3 of the vlaidtor set
// disagrees with the rest. Normally this would require a chain halt, manual genesis editing and restar to resolve
// with this feature a governance proposal can be used instead
message UnhaltBridgeProposal {
    option (gogoproto.equal) = true;
    option (gogoproto.goproto_getters) = false;
    option (gogoproto.goproto_stringer) = false;
  
    string title = 1;
    string description = 2;
    string target_chain_name = 3;
    uint64 target_nonce = 4;
  }
  
  // AirdropProposal defines a custom governance proposal type that allows an airdrop to occur in a decentralized
  // fashion. A list of destination addresses and an amount per airdrop recipient is provided. The funds for this
  // airdrop are removed from the Community Pool, if the community pool does not have sufficient funding to perform
  // the airdrop to all provided recipients nothing will occur
  message AirdropProposal {
    option (gogoproto.equal) = true;
    option (gogoproto.goproto_getters) = false;
    option (gogoproto.goproto_stringer) = false;
  
    string title = 1;
    string description = 2;
    string denom = 3;
    bytes  recipients = 4;
    repeated uint64 amounts   = 5;
  }
  
  // IBCMetadataProposal defines a custom governance proposal type that allows governance to set the
  // metadata for an IBC token, this will allow Gravity to deploy an ERC20 representing this token on
  // Ethereum
  // Name: the token name
  // Symbol: the token symbol
  // Description: the token description, not sent to EVM chain at all, only used on Cosmos
  // Display: the token display name (only used on Cosmos to decide ERC20 Decimals)
  // Deicmals: the decimals for the display unit
  // ibc_denom is the denom of the token in question on this chain
  message IBCMetadataProposal {
    option (gogoproto.equal) = false;
    option (gogoproto.goproto_getters) = false;
    option (gogoproto.goproto_stringer) = false;
  
    string title = 1;
    string description = 2;
    cosmos.bank.v1beta1.Metadata metadata  = 3 [
      (gogoproto.nullable) = false
    ];
    string ibc_denom = 4;
  }
  
  // EvmChainProposal defines a custom governance proposal type that allows governance to set the
  // data and params of an EVM chain, this will allow Gravity to connect with valsets on that EVM chain.
  message EvmChainProposal {
    option (gogoproto.equal) = false;
    option (gogoproto.goproto_getters) = false;
    option (gogoproto.goproto_stringer) = false;
  
    string title = 1;
    string description = 2;
    EvmChainData chain_data = 3 [(gogoproto.nullable) = false];
    EvmChainParams params = 4 [(gogoproto.nullable) = false];
    string reserved_main_token = 5;
  }