syntax = "proto3";
package aioz.staking.v1beta1;

import "gogoproto/gogo.proto";
import "google/protobuf/duration.proto";

option go_package = "x/staking/types";

// Params defines the parameters for the staking module.
message Params {
  option (gogoproto.equal)            = true;
  option (gogoproto.goproto_stringer) = false;

  // unbonding_time is the time duration of unbonding.
  google.protobuf.Duration unbonding_time = 1
  [(gogoproto.nullable) = false, (gogoproto.stdduration) = true, (gogoproto.moretags) = "yaml:\"unbonding_time\""];
  // max_validators is the maximum number of validators.
  uint32 max_validators = 2 [(gogoproto.moretags) = "yaml:\"max_validators\""];
  // max_entries is the max entries for either unbonding delegation or redelegation (per pair/trio).
  uint32 max_entries = 3 [(gogoproto.moretags) = "yaml:\"max_entries\""];
  // historical_entries is the number of historical entries to persist.
  uint32 historical_entries = 4 [(gogoproto.moretags) = "yaml:\"historical_entries\""];
  // bond_denom defines the bondable coin denomination.
  string bond_denom = 5 [(gogoproto.moretags) = "yaml:\"bond_denom\""];

  // accept_all_validators is to allow create validator without gov
  bool accept_all_validators = 101 [(gogoproto.moretags) = "yaml:\"accept_all_validators\""];
}