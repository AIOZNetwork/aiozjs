syntax = "proto3";
package aioz.staking.client;

option go_package            = "github.com/AIOZNetwork/go-aioz/x/staking/client/utils";
option (gogoproto.equal_all) = false;

import "gogoproto/gogo.proto";
import "cosmos/staking/v1beta1/tx.proto";

message CreateValidatorProposalJSON {
  option (gogoproto.goproto_getters)  = false;
//  option (gogoproto.goproto_stringer) = false;

  string               title       = 1;
  string               description = 2;
  cosmos.staking.v1beta1.MsgCreateValidator validator     = 3 [(gogoproto.nullable) = false];
  string               deposit     = 4;
}

//message CreateValidatorProposalReq {
//  option (gogoproto.goproto_getters)  = false;
//  option (gogoproto.goproto_stringer) = false;
//
//  string               title       = 1;
//  string               description = 2;
//  cosmos.staking.v1beta1.MsgCreateValidator validator     = 3 [(gogoproto.nullable) = false];
//  string               proposer    = 4 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
//  string               deposit     = 5 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coins"];
//}